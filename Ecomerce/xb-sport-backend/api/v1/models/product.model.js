'use strict';
const { Schema, model } = require('mongoose');
const slugify = require('slugify');
const DOCUMENT_NAME = 'Product';
const COLLECTION_NAME = 'Products';

const productSchema = new Schema(
  {
    code: { type: String, required: true },
    name: { type: String, required: true },
    category: { type: Schema.Types.ObjectId, ref: 'Category' },
    thumbnail: String,
    slug: String, // auto-generated by slugify in pre-save middleware
    brand: { type: String, required: true },
    description: String,
    price: { type: Number, required: true },
    quantity: { type: Number, required: true },
    images: Array,
    weight: Number,
    dimension: {
      length: Number,
      width: Number,
      height: Number,
    },
    shop_id: { type: Schema.Types.ObjectId, ref: 'Shop' },
    attrs: [{ type: Schema.Types.ObjectId, ref: 'Attribute' }],
    variations: [
      {
        options: [
          {
            attr_id: { type: Schema.Types.ObjectId, ref: 'Attribute' },
            value_idx: Number,
          },
        ],
        sku: String,
        image: String,
        price: Number,
        quantity: Number,
      },
    ],
    isDeleted: { type: Boolean, default: false },
  },
  {
    collection: COLLECTION_NAME,
    timestamps: true,
  },
);

// Create index for search
productSchema.index({ name: 'text', description: 'text' });

// Document middleware: runs before .save() and .create() ...
productSchema.pre('save', function (next) {
  this.slug = slugify(this.name, { lower: true });
  next();
});

module.exports = model(DOCUMENT_NAME, productSchema);
